vector<vector<int>> merge(vector<vector<int>>& intervals) {
        sort(intervals.begin(),intervals.end());
        stack<pair<int,int>>st;
        for(int i=0;i<intervals.size();i++){
            if(st.empty() || intervals[i][0] > st.top().second){
                st.push({intervals[i][0],intervals[i][1]});
            }
            else{
                if(intervals[i][0]<=st.top().second && st.top().second<intervals[i][1]){
                    pair<int,int>pr=st.top();
                    st.pop();
                    st.push({pr.first,intervals[i][1]});
                }
            }
        }
        vector<vector<int>>vec(st.size(),vector<int>(2));
        int i=st.size()-1;
        while(!st.empty()){
            vec[i][0]=st.top().first;
            vec[i][1]=st.top().second;
            st.pop();
            i--;
        }
        return vec;
        
    }
