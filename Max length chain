// { Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

struct val{
	int first;
	int second;
};



int maxChainLen(struct val p[],int n);
int main() {
	// your code goes here
	int t;
	cin>>t;
	while(t--)
	{
		int n;
		cin>>n;
		val p[n];
		for(int i=0;i<n;i++)
		{
			cin>>p[i].first>>p[i].second;
		}
		
		cout<<maxChainLen(p,n)<<endl;
	}
	return 0;
}// } Driver Code Ends


/*
The structure to use is as follows
struct val{
	int first;
	int second;
};*/

/*You are required to complete this method*/
int maxChainLen(struct val p[],int n)
{
    int lis[n];
    fill(lis,lis+n,1);
    int mx=1;
    vector<pair<int,int>>v;
    for(int i=0;i<n;i++){
        v.push_back({p[i].first,p[i].second});
    }
    sort(v.begin(),v.end());
    for(int i=1;i<n;i++){
        for(int j=0;j<i;j++){
            if(v[i].first>v[j].second && lis[i]<=lis[j]){
                lis[i]=lis[j]+1;
                mx=max(mx,lis[i]);
                
            }
        }
    }
    return mx;
    
//Your code here
}
