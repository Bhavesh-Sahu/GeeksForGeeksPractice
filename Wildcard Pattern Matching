bool solve(string pattern,string str,int n,int m,vector<vector<int>>&dp){
        
        if(m==0){
            for(int i=0;i<n;i++)
                if(pattern[i]!='*')
                    return 0;
                    
            return dp[n][m]=1;
        }
            
        if(n==0){
            return dp[n][m]=0;
        }
        if(dp[n][m]!=-1)
            return dp[n][m];
        if(pattern[n-1]==str[m-1] || pattern[n-1]=='?')
            return dp[n][m]=solve(pattern,str,n-1,m-1,dp);
        if(pattern[n-1]=='*')
            return dp[n][m]=solve(pattern,str,n,m-1,dp) || solve(pattern,str,n-1,m,dp);
    
        return 0;
    }
    int wildCard(string pattern,string str)
    {
        int n=pattern.length();
        int m=str.length();
        vector<vector<int>>dp(n+1,vector<int>(m+1,-1));
        int ans = solve(pattern,str,n,m,dp);
        if(ans)
            return 1;
        else
            return 0;
        
    }
